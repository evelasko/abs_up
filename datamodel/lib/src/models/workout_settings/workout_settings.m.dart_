import 'package:equatable/equatable.dart';
import 'package:hive/hive.dart';
import 'package:json_annotation/json_annotation.dart';

import '../../app/constants/constants.dart';
import '../../app/constants/hive_constants.dart';
import '../equipment/equipment.m.dart';

class WorkoutSettings extends Equatable {
  @HiveField(0)
  final String userId;
  @HiveField(1)
  final int length;
  @HiveField(2)
  final int intensity;
  @HiveField(3)
  final int difficulty;
  @HiveField(4)
  final bool impact;
  @HiveField(5)
  final List<Equipment> equipment;

  /// Returns a WorkoutSettings instance with *defaults settings* if no parameters are provided
  WorkoutSettings(this.userId,
      {this.length = LENGTH_DEFAULT,
      this.intensity = INTENSITY_DEFAULT,
      this.difficulty = DIFFICULTY_DEFAULT,
      this.impact = IMPACT_DEFAULT,
      this.equipment = const [EQUIPMENT_DEFAULT]});

  /// Data UI getters
  String get intensityString => intensityToString(intensity);
  String get difficultyString => difficultyToString(difficulty);
  String get lengthString => lengthToString(length);
  String get impactString => impactToString(impact);

  bool checkEquipmentStatusFor(String equipmentKey) =>
      equipment.contains(equipmentKey);

  WorkoutSettings copyWith(
          {int length,
          int intensity,
          int difficulty,
          bool impact,
          List<String> equipment}) =>
      WorkoutSettings(
          length: length ?? this.length,
          intensity: intensity ?? this.intensity,
          difficulty: difficulty ?? this.difficulty,
          impact: impact ?? this.impact,
          equipment: equipment ?? this.equipment);

  /// Comparison checker
  bool hasWorkoutSettingsKeys(Map<String, dynamic> maybeWorkoutSettings) =>
      maybeWorkoutSettings.containsKey(INTENSITY_KEY) &&
      maybeWorkoutSettings.containsKey(DIFFICULTY_KEY) &&
      maybeWorkoutSettings.containsKey(LENGTH_KEY) &&
      maybeWorkoutSettings.containsKey(IMPACT_KEY) &&
      maybeWorkoutSettings.containsKey(EQUIPMENT_KEY);

  @override
  List<Object> get props => [];

  @override
  bool get stringify => true;
}
